[main]
#Seed: What we initialize our RNG with. Blank starts randomly
seed:

#Sequence Length: number of times to pit each agent against the other
l:50

#Runs: Number of times we run our EA
runs:30

#Number of fit evals per run
fitevals:1000

#Oppenent types, either 0 for always last winning or "opponent1.csv" 
#or whatever the file name is for the custom ai
opp:0

[agent]
#Memory: how sequences back we remember
#To avoid as much noise as possible, k << l
#However, k must be > 4 (or whatever the CSV uses) due to design issues
k:8

#Maximum: Tree Depth
d:4

#Payoff matrix. This is tauritz's table from left to right, top to bottom
#scissors => s
#rock => r
#paper => p
#Normalized to [0,1]
#opponentplayer => res value
#rr,rp,rs,pr,pp,ps,sr,sp,ss
payoff:0.5,1,0,0,0.5,1,1,0,0.5

[init]
#Method, either grow or full
method:full

#Grow:
#  Probability of placing a terminal vs placing a node
#  .50 results in the generic grow, anything else can allow us to get a more flushed out tree
prob:.25

[log]
#Acceptable variables:
#  %bf => best fitness
#  %cm => commit
#  %cfg => config file name
#Log filename, relative or absolute
result:logs/lastwinner-result.txt
#Where we pump out the solution
solution:logs/lastwinner-soution.txt
#Log headers, do we try to query git (1) or not (0)?
logh:1