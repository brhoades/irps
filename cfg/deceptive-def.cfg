[main]
#Seed: What we initialize our RNG with. Blank starts randomly
seed:

#Sequence Length: number of times to pit each agent against the other
#l >= 3k (memory) or will be set to 3k
l:30

#Runs: Number of times we run our EA
runs:30

#Path to CSV opponent
opp:opponent1.csv

[agent]
#Memory: how sequences back we remember
#To avoid as much noise as possible, k << l
#< 4 runs into issues with the opponent
k:4

#Maximum: Tree Depth
#Should be > 4
d:7

#Payoff matrix. This is tauritz's table from left to right, top to bottom
#scissors => s
#rock => r
#paper => p
#Normalized to [0,1], -3 => 0, 1 => .8, 2 => 1
#opponentplayer => res value
#rr,rp,rs,pr,pp,ps,sr,sp,ss
payoff:.8,1,0,0,0.8,1,1,0,0.8

#Parsimony pressure coefficent
#( maxdepth - agent->d )* ppcoeff, if depth > d.
#  This amount is subtracted from the fitness
ppcoeff:0.05

[gen]
#mu, pop size
mu:1000
#lambda, offspring per gen
lamb:100

[init]
#Method, either grown, halfandhalf or full
method:halfandhalf

[parentselection]
#Type of selection
#0 => Fitness Proportional
#1 => Over-selection
type:1

#Over selection percent (decimal)
c:0.32

[mutation]
#Mutation rate chance
chance:0.025

[survivalselection]
#Type of selection
#0 => Truncation
#2 => k-tournament
type:2

#k-tournament size
k:20

#Survival Strategy
#0 => COMMA
#1 => PLUS
strat:1

[terminate]
#Termination Type
#0 => # of Fit Evals
#1 => no fitness change for j turns
type:0

#Number of fit evals per run
fitevals:10000

#number of generations without avg fitness improvement
j:10

[log]
#Acceptable variables:
#  %bf => best fitness
#  %cm => commit
#  %cfg => config file name
#Log filename, relative or absolute
result:logs/as2b-dec-csv-result-log.txt
#Where we pump out the solution
solution:logs/as2b-dec-csv-solution-log.txt
#CSV filename with data for graphs
csv:logs/as2b-dec-csv-result.csv

#Log headers, do we try to query git (1) or not (0)?
logh:1
